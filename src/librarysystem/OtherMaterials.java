/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package librarysystem;

import java.awt.Color;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Biben
 */
public class OtherMaterials extends javax.swing.JPanel {

    /**
     * Creates new form OtherMaterials
     */
    LibrarySystem ugat;
    DefaultTableModel mod;
    MySQLAPI api;
    public OtherMaterials(LibrarySystem root) {
        initComponents();
        this.ugat = root;
        this.setSize(540, 283);
       this.setLocation(230, 5);
       this.setBackground(new Color(0,0,0,0));
       
                mod = (DefaultTableModel)this.tblMaterials.getModel();
       //scr.setBackground(new Color(0,0,0,0));
       tblMaterials.setSelectionBackground(new Color(51,153,255));
       tblMaterials.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
       tblMaterials.getTableHeader().setReorderingAllowed(false);
     
       //code for diabling editing column
       for(int x=0;x<tblMaterials.getColumnCount();x++){
       Class<?> colClass = tblMaterials.getColumnClass(x);
       tblMaterials.setDefaultEditor(colClass, null);
       }
        api = new MySQLAPI("jdbc:mysql://localhost:3306/db_library","root","");
        this.refreshTableMaterial("*", "*");
    }

    
    
    public void refreshTableMaterial(String cat,String val){
    ArrayList<Material> mat =api.getAllMaterial(cat, val);
    mod.setRowCount(0);
    for(int x=0;x<mat.size();x++){
        Material m =(Material)mat.get(x);
        String bor = m.getStatus();
        if(m.getStatus().equals(Material.BORROWED)){
            BorrowedMaterial borMat =api.getSpecificBorrowedMaterial(m.getId());
            Faculty f =api.getSpecificFaculty(borMat.getBorrower());
            
        bor+="("+f.getId()+"-"+f.getFullName()+")";
        }
    mod.addRow(new Object[]{m.getId(),m.getName(),bor});
    }
    
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtSearchMat = new javax.swing.JTextField();
        cboSearchMat = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblMaterials = new javax.swing.JTable();
        btnReturn = new javax.swing.JButton();
        btnBorrow = new javax.swing.JButton();
        btnManage = new javax.swing.JButton();
        btnArchive = new javax.swing.JButton();

        setLayout(null);

        txtSearchMat.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchMatKeyReleased(evt);
            }
        });
        add(txtSearchMat);
        txtSearchMat.setBounds(110, 2, 290, 29);

        cboSearchMat.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "ID", "Name", "Status", "Borrower" }));
        add(cboSearchMat);
        cboSearchMat.setBounds(396, 1, 70, 30);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/viewBook.png"))); // NOI18N
        jLabel1.setText("jLabel1");
        add(jLabel1);
        jLabel1.setBounds(0, 0, 540, 30);

        tblMaterials.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Material ID", "Material Name", "Status"
            }
        ));
        tblMaterials.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblMaterialsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblMaterials);

        add(jScrollPane1);
        jScrollPane1.setBounds(0, 30, 540, 190);

        btnReturn.setText("Return");
        btnReturn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReturnActionPerformed(evt);
            }
        });
        add(btnReturn);
        btnReturn.setBounds(440, 230, 90, 25);

        btnBorrow.setText("Borrow");
        btnBorrow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrowActionPerformed(evt);
            }
        });
        add(btnBorrow);
        btnBorrow.setBounds(350, 230, 90, 25);

        btnManage.setText("Add");
        btnManage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnManageActionPerformed(evt);
            }
        });
        add(btnManage);
        btnManage.setBounds(280, 230, 70, 25);

        btnArchive.setText("Archive");
        btnArchive.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnArchiveActionPerformed(evt);
            }
        });
        add(btnArchive);
        btnArchive.setBounds(190, 230, 90, 25);
    }// </editor-fold>//GEN-END:initComponents

    private void btnManageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnManageActionPerformed
        // TODO add your handling code here:
      DialogLarge d =  new DialogLarge(this.ugat,"as",true);
      d.addPanel(new ManageMaterial(d));
      d.coverFrame(ugat.getCoverBlur());
      d.executeDialog();
      d.hideCoverFrame(ugat.getCoverBlur());
       this.refreshTableMaterial("*", "*");
    }//GEN-LAST:event_btnManageActionPerformed

    private void txtSearchMatKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchMatKeyReleased
        // TODO add your handling code here:
        this.refreshTableMaterial(cboSearchMat.getSelectedItem().toString(), txtSearchMat.getText());
    }//GEN-LAST:event_txtSearchMatKeyReleased

    private void btnBorrowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrowActionPerformed
        // TODO add your handling code here:
        int pili = tblMaterials.getSelectedRow();
        if(pili==-1){
        LibrarySystem.showError("Select specific materials!", "Failed to Borrow", this);
        }else{
        String matId = mod.getValueAt(pili, 0).toString();
        Material m = api.getSpecificMaterial(Integer.parseInt(matId));
        String com = m.getId()+"-"+m.getName();
        if(m.getStatus().equals(Material.ARCHIVE)){
        LibrarySystem.showError("Cannot borrow the archived materials!", "Borrow Failed", this);
        }else if(m.getStatus().equals(Material.BORROWED)){
        
        LibrarySystem.showError(com+" is already borrowed!", "Borrow Failed", this);
        }else{
         DialogLarge d = new DialogLarge(this.ugat,"as",true);
       d.addPanel(new BorrowMaterial(d,m));
       d.coverFrame(ugat.getCoverBlur());
       d.executeDialog();
       d.hideCoverFrame(ugat.getCoverBlur());
       this.refreshTableMaterial("*", "*");
        }
        
        }//end of lese
      
    }//GEN-LAST:event_btnBorrowActionPerformed

    private void btnArchiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnArchiveActionPerformed
        // TODO add your handling code here:
        int pili = tblMaterials.getSelectedRow();
        if(pili==-1){
        LibrarySystem.showError("Select specific materials to be archived!", "Failed to archive", this);
        }else{
          int id =  Integer.parseInt(mod.getValueAt(pili, 0).toString());
            Material mat = api.getSpecificMaterial(id);
            String common = mat.getId()+"-"+mat.getName();
           
            if(mat.getStatus().equals(Material.ARCHIVE)){
                int pi=LibrarySystem.showConfirmation(common+" material is already archive!\nDo you want to unarchived?", "Failed to Archive", this);
                if(pi==0){
                api.updateData("TblMaterial", "status_mat", Material.STORED, "material_id", mat.getId()+"");
                api.deleteData("TblArchivedMaterial", "material_id", mat.getId()+"");
                this.refreshTableMaterial("*", "*");
                LibrarySystem.showMessage(common+" successfully unarchived!", "Unarchived Material", this);
                }
            }else if(mat.getStatus().equals(Material.BORROWED)){
                LibrarySystem.showError("Borrowed materials cannot be archived!", "Failed to Archive", this);
            }else{
           int ch= LibrarySystem.showConfirmation("Are you sure to archive this material?\n"+mat.getId()+"-"+mat.getName()+"?", "Archive material", this);
           if(ch==0){
           api.updateData("TblMaterial","status_mat",Material.ARCHIVE, "material_id", mat.getId()+"");
           api.insertArchiveMaterial(mat, ugat.getLogged());
           this.refreshTableMaterial("*", "*");
           LibrarySystem.showMessage(mat.getName()+" successfully archived!", "Archive material", this);
           }
            }
            
        
        }
    }//GEN-LAST:event_btnArchiveActionPerformed

    private void tblMaterialsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMaterialsMouseClicked
        // TODO add your handling code here:
        
        if(evt.getClickCount()==2){}
        else{
        
          int alin = this.tblMaterials.getSelectedRow();
          int id = Integer.parseInt(mod.getValueAt(alin, 0).toString());
          Material m =api.getSpecificMaterial(id);
          if(m.getStatus().equals(Material.ARCHIVE)){
          this.btnArchive.setText("Unarchive");
          }else{
          this.btnArchive.setText("Archive");
          }
        
        }
        
    }//GEN-LAST:event_tblMaterialsMouseClicked

    private void btnReturnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReturnActionPerformed
        // TODO add your handling code here:
          int pili = tblMaterials.getSelectedRow();
        if(pili==-1){
        LibrarySystem.showError("Select specific borrowed material!", "Failed to return material", this);
        }
        else{
        
        int matId = Integer.parseInt(mod.getValueAt(pili, 0).toString());
        Material m = api.getSpecificMaterial(matId);
        String com = m.getId()+"-"+m.getName();
        if(m.getStatus().equals(Material.STORED)){
        LibrarySystem.showError(com+" is not borrowed!", "Failed to return material", this);
        }else if(m.getStatus().equals(Material.ARCHIVE)){
        LibrarySystem.showError(com+" is not borrowed!", "Failed to return material", this);
        }else{
            
            //String kelan = api.getData("TblBorrowedMaterial", "material_id", m.getId(), "date_borrowed");
            BorrowedMaterial bor = api.getSpecificBorrowedMaterial(m.getId());
            
            String kelan = bor.getDateBorrowed();
            Date hiram = new Date(Long.parseLong(kelan));
            long pagitan =System.currentTimeMillis()-Long.parseLong(kelan);
            int araw = (int)(pagitan/ReturnBookConfirm.ONE_DAY_MILLI);
            double price=araw * 10;
            
           DialogLarge d = new DialogLarge(this.ugat,"as",true);
           d.addPanel(new ReturnMaterial(d,bor));
           d.coverFrame(ugat.getCoverBlur());
           d.executeDialog();
           d.hideCoverFrame(ugat.getCoverBlur());
           
//            String mes = "*** Return Material ***\nMaterial Id : "+m.getId()+"\nMaterial Name : "+m.getName()+"\nBorrowed by : "+f.getFullName()+"\nDate borrowed : "+hiram.toLocaleString()+"\nPenalty : =P= "+price;
//           
//            
//           
//            int pi = LibrarySystem.showConfirmation(mes, "Return material", this);
//            if(pi==0){
//            api.updateData("TblMaterial", "status_mat", Material.STORED, "material_id", m.getId()+"");
//            api.deleteData("TblBorrowedMaterial", "material_id", m.getId()+"");
//            
//            
//            LibrarySystem.showMessage(com+" is successfully return", "Return Material", this);
//            }
        }
        
        
        this.refreshTableMaterial("*", "*");
        }
    }//GEN-LAST:event_btnReturnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnArchive;
    private javax.swing.JButton btnBorrow;
    private javax.swing.JButton btnManage;
    private javax.swing.JButton btnReturn;
    private javax.swing.JComboBox cboSearchMat;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblMaterials;
    private javax.swing.JTextField txtSearchMat;
    // End of variables declaration//GEN-END:variables
}
