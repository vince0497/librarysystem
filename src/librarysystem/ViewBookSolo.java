/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package librarysystem;

import java.awt.Color;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Biben
 */
public class ViewBookSolo extends javax.swing.JPanel {

    /**
     * Creates new form ViewBookSolo
     */
    public final static int BORROW=1,ALTER=2,ARCHIVE=3;
    DialogLarge root;
    Book book;
    MySQLAPI api;
    DefaultTableModel mod;
    public ViewBookSolo(DialogLarge dlg,Book b) {
        initComponents();
        this.root = dlg;
       this.book = b;

        dlg.setUndecorated(true);
        dlg.setSize(630, 335);
     dlg.setLocation(300, 300);
        lblAvail.hide();
        
         api = new MySQLAPI("jdbc:mysql://localhost:3306/db_library","root","");
      
         this.refreshSide();

       //date setting ng update table
       Date dNow =new Date();
        Calendar cal = new GregorianCalendar();
      int taon=dNow.getYear()+1900;
    
      for(int x=taon;x>=(taon-30);x--){
          this.cboYear.addItem(x+"");
      }
      
      ArrayList<Category> cat = api.getAllCategory();
     
      for(int x=0;x<cat.size();x++){
      cboCategory.addItem(cat.get(x).getCategory());
      }
       
       txtISBN.setText(book.getISBN());
       txtTitle.setText(book.getTitle());
       txtAuthor.setText(book.getAuthor());
       txtPublisher.setText(book.getPublisher());
       cboYear.setSelectedItem(book.getYearPublished());
       cboCategory.setSelectedItem(book.getCategory());
       
       //end fo updating bal side
       
       this.setAvailableBook();
    
       
       
       
       
       //archive part
       
         mod = (DefaultTableModel)this.tblCopies.getModel();
       
       tblCopies.setSelectionBackground(new Color(51,153,255));
       tblCopies.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
     tblCopies.getTableHeader().setReorderingAllowed(false);
       //code for diabling editing column
       for(int x=0;x<tblCopies.getColumnCount();x++){
       Class<?> colClass = tblCopies.getColumnClass(x);
       tblCopies.setDefaultEditor(colClass, null);
       }
       
   this.refreshArchive();
     
    
       
    }//end of ciontrucotr

    
    public void setShow(int show){
        
        switch(show){
            
            case ViewBookSolo.BORROW:{
                this.tabBook.remove(1);
                this.tabBook.remove(1);
                break;}
            case ViewBookSolo.ALTER:{
                this.tabBook.remove(0);
                this.tabBook.remove(1);
                break;}
            case ViewBookSolo.ARCHIVE:{
                this.tabBook.remove(0);
                this.tabBook.remove(0);
                
                break;}
        
        }//end of show
    
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblCloseView = new javax.swing.JLabel();
        lblBorrowCopies = new javax.swing.JLabel();
        lblTitle = new javax.swing.JLabel();
        lblTotalCopies = new javax.swing.JLabel();
        lblYear = new javax.swing.JLabel();
        lblPublisher = new javax.swing.JLabel();
        lblAuthor = new javax.swing.JLabel();
        lblRemCopies = new javax.swing.JLabel();
        lblArchived = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        tabBook = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        lblAvail = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtStudNo = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        cboCopyNum = new javax.swing.JComboBox();
        btnBorrow = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtPublisher = new javax.swing.JTextField();
        txtISBN = new javax.swing.JTextField();
        txtTitle = new javax.swing.JTextField();
        cboCategory = new javax.swing.JComboBox();
        cboYear = new javax.swing.JComboBox();
        btnSave = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        txtAuthor = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblCopies = new javax.swing.JTable();
        jLabel12 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();

        setBackground(new Color(0,0,0,0));
        setLayout(null);

        lblCloseView.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/dialogClose.png"))); // NOI18N
        lblCloseView.setText("jLabel2");
        lblCloseView.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblCloseView.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblCloseViewMouseClicked(evt);
            }
        });
        add(lblCloseView);
        lblCloseView.setBounds(600, 5, 20, 16);

        lblBorrowCopies.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblBorrowCopies.setForeground(new java.awt.Color(0, 0, 153));
        lblBorrowCopies.setText("Borrowed Copies : ");
        add(lblBorrowCopies);
        lblBorrowCopies.setBounds(130, 190, 50, 14);

        lblTitle.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(0, 0, 102));
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        add(lblTitle);
        lblTitle.setBounds(200, 35, 410, 20);

        lblTotalCopies.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblTotalCopies.setForeground(new java.awt.Color(0, 0, 153));
        lblTotalCopies.setText("Total Copies : ");
        add(lblTotalCopies);
        lblTotalCopies.setBounds(100, 160, 80, 14);

        lblYear.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblYear.setForeground(new java.awt.Color(0, 0, 153));
        lblYear.setText("Year : ");
        add(lblYear);
        lblYear.setBounds(120, 130, 50, 14);

        lblPublisher.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblPublisher.setForeground(new java.awt.Color(0, 0, 153));
        lblPublisher.setText("Publisher : ");
        add(lblPublisher);
        lblPublisher.setBounds(80, 100, 110, 14);

        lblAuthor.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblAuthor.setForeground(new java.awt.Color(0, 0, 153));
        lblAuthor.setText("Author :");
        add(lblAuthor);
        lblAuthor.setBounds(60, 70, 120, 14);

        lblRemCopies.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblRemCopies.setForeground(new java.awt.Color(0, 0, 153));
        lblRemCopies.setText("Remaining Copies : ");
        add(lblRemCopies);
        lblRemCopies.setBounds(130, 220, 50, 14);

        lblArchived.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblArchived.setForeground(new java.awt.Color(0, 0, 153));
        lblArchived.setText("Archived Copies : ");
        add(lblArchived);
        lblArchived.setBounds(110, 250, 70, 14);

        jLabel11.setText("Remaining Copies :");
        add(jLabel11);
        jLabel11.setBounds(10, 220, 110, 16);

        jLabel13.setText("Author : ");
        add(jLabel13);
        jLabel13.setBounds(10, 70, 50, 16);

        jLabel14.setText("Publisher : ");
        add(jLabel14);
        jLabel14.setBounds(10, 100, 80, 16);

        jLabel15.setText("Year Published : ");
        add(jLabel15);
        jLabel15.setBounds(10, 130, 100, 16);

        jLabel16.setText("Total Copies : ");
        add(jLabel16);
        jLabel16.setBounds(10, 160, 80, 16);

        jLabel17.setText("Borrowed Copies :");
        add(jLabel17);
        jLabel17.setBounds(10, 190, 110, 16);

        jLabel18.setText("Archive Copies :");
        add(jLabel18);
        jLabel18.setBounds(10, 250, 100, 16);

        tabBook.setToolTipText("");

        jPanel1.setBackground(new Color(0,0,0,0));
        jPanel1.setLayout(null);

        lblAvail.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblAvail.setForeground(new java.awt.Color(255, 0, 0));
        lblAvail.setText("This book is not available for borrowing.");
        jPanel1.add(lblAvail);
        lblAvail.setBounds(100, 20, 250, 14);

        jLabel3.setText("Student No/Faculty ID ");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(30, 60, 150, 16);

        txtStudNo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtStudNoKeyPressed(evt);
            }
        });
        jPanel1.add(txtStudNo);
        txtStudNo.setBounds(190, 50, 180, 30);

        jLabel4.setText("Book Copy Number");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(50, 100, 130, 16);

        jPanel1.add(cboCopyNum);
        cboCopyNum.setBounds(190, 90, 180, 30);

        btnBorrow.setText("Borrow");
        btnBorrow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrowActionPerformed(evt);
            }
        });
        jPanel1.add(btnBorrow);
        btnBorrow.setBounds(250, 140, 73, 25);

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/conAddBookForm.png"))); // NOI18N
        jLabel10.setText("jLabel1");
        jPanel1.add(jLabel10);
        jLabel10.setBounds(0, -10, 420, 230);

        tabBook.addTab("Borrow Book", jPanel1);

        jPanel3.setBackground(new Color(0,0,0,0));
        jPanel3.setLayout(null);

        jLabel2.setForeground(new java.awt.Color(0, 0, 153));
        jLabel2.setText("Category");
        jPanel3.add(jLabel2);
        jLabel2.setBounds(290, 100, 70, 16);

        jLabel5.setForeground(new java.awt.Color(0, 0, 153));
        jLabel5.setText("ISBN");
        jPanel3.add(jLabel5);
        jLabel5.setBounds(20, 20, 50, 16);

        jLabel6.setForeground(new java.awt.Color(0, 0, 153));
        jLabel6.setText("Author");
        jPanel3.add(jLabel6);
        jLabel6.setBounds(10, 100, 60, 16);

        jLabel7.setForeground(new java.awt.Color(0, 0, 153));
        jLabel7.setText("Title");
        jPanel3.add(jLabel7);
        jLabel7.setBounds(20, 60, 50, 16);

        jLabel8.setForeground(new java.awt.Color(0, 0, 153));
        jLabel8.setText("Year Publish");
        jPanel3.add(jLabel8);
        jLabel8.setBounds(290, 20, 70, 16);

        txtPublisher.setBackground(new Color(0,0,0,20));
        txtPublisher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPublisherActionPerformed(evt);
            }
        });
        jPanel3.add(txtPublisher);
        txtPublisher.setBounds(70, 130, 150, 30);

        txtISBN.setEditable(false);
        txtISBN.setBackground(new Color(0,0,0,20));
        txtISBN.setEnabled(false);
        txtISBN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtISBNActionPerformed(evt);
            }
        });
        jPanel3.add(txtISBN);
        txtISBN.setBounds(70, 10, 150, 30);

        txtTitle.setBackground(new Color(0,0,0,20));
        txtTitle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTitleActionPerformed(evt);
            }
        });
        jPanel3.add(txtTitle);
        txtTitle.setBounds(70, 50, 150, 30);

        jPanel3.add(cboCategory);
        cboCategory.setBounds(250, 130, 150, 30);

        cboYear.setEditable(true);
        jPanel3.add(cboYear);
        cboYear.setBounds(250, 40, 150, 30);

        btnSave.setText("Save Changes");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        jPanel3.add(btnSave);
        btnSave.setBounds(270, 180, 130, 25);

        jLabel9.setForeground(new java.awt.Color(0, 0, 153));
        jLabel9.setText("Publisher");
        jPanel3.add(jLabel9);
        jLabel9.setBounds(10, 140, 50, 16);

        txtAuthor.setBackground(new Color(0,0,0,20));
        txtAuthor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAuthorActionPerformed(evt);
            }
        });
        jPanel3.add(txtAuthor);
        txtAuthor.setBounds(70, 90, 150, 30);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/conAddBookForm.png"))); // NOI18N
        jLabel1.setText("jLabel1");
        jPanel3.add(jLabel1);
        jLabel1.setBounds(0, -10, 420, 230);

        tabBook.addTab("Alter Information", jPanel3);

        jPanel2.setBackground(new Color(0,0,0,0));
        jPanel2.setLayout(null);

        tblCopies.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Book_ID", "Copy_Number", "Status"
            }
        ));
        tblCopies.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblCopiesMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblCopies);

        jPanel2.add(jScrollPane2);
        jScrollPane2.setBounds(0, 0, 420, 160);

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/conAddBookForm.png"))); // NOI18N
        jLabel12.setText("jLabel1");
        jPanel2.add(jLabel12);
        jLabel12.setBounds(0, -10, 420, 230);

        tabBook.addTab("Archive Book", jPanel2);

        add(tabBook);
        tabBook.setBounds(190, 60, 420, 240);

        jLabel19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/emptyPopup.png"))); // NOI18N
        jLabel19.setText("jLabel19");
        add(jLabel19);
        jLabel19.setBounds(0, 0, 630, 340);
    }// </editor-fold>//GEN-END:initComponents

    public void refreshSide(){
    
         lblTitle.setText(book.getTitle());
       lblAuthor.setText(book.getAuthor());
       lblPublisher.setText(book.getPublisher());
       lblYear.setText(book.getYearPublished());
       lblTotalCopies.setText(book.getTotal()+"");
       lblBorrowCopies.setText(api.getBorrowedCount(book)+"");
       this.lblRemCopies.setText(api.getRemainingCount(book)+"");
      lblArchived.setText(api.getArchivedCount(book)+"");
        
    }
    
    public void setAvailableBook(){
        ArrayList<Book> b=api.getAvailableBooks(book);
        for(int x=0;x<b.size();x++){
        cboCopyNum.addItem(b.get(x).getCopyNumber());
        }
        if(b.size()==0){
        txtStudNo.setEnabled(false);
        cboCopyNum.setEnabled(false);
        btnBorrow.setEnabled(false);
        lblAvail.show();
        }
    }
    
    public void refreshArchive(){
      ArrayList<Book> libros =  api.getBooks(book.getISBN());
     mod.setRowCount(0);
     for(int x=0;x<libros.size();x++){
     Book l = (Book)libros.get(x);
     mod.addRow(new Object[]{l.getId(),l.getCopyNumber(),l.getStatus()});
     }
    }
    
    private void lblCloseViewMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCloseViewMouseClicked
        // TODO add your handling code here:
        this.root.dispose();
    }//GEN-LAST:event_lblCloseViewMouseClicked

    private void tblCopiesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCopiesMouseClicked
        // TODO add your handling code here:
        if(evt.getClickCount() == 2){
            String val = mod.getValueAt(tblCopies.getSelectedRow(), 0).toString();
            // System.out.println("uki" +val);
            Book b=  api.getSpecificBook(Integer.parseInt(val));
               // System.out.println("ANG BOOK ID "+b.getId());
            if(b.getStatus().equals(Book.BORROWED)){
                LibrarySystem.showError("Borrowed book is not allowed for archiving!", root);
            }else if(b.getStatus().equals(Book.ARCHIVED)){
                //LibrarySystem.showError("This book is already archived!", root);
int pili=LibrarySystem.showConfirmation("This book is archived?\nDo you want to unarchived?", "Archive", this);
           if(pili==0){
           LibrarySystem.showMessage("Successfully unarchived.", "Archived", this);
           api.updateData("TblBook", "status", Book.STORED, "book_id", b.getId()+"");
           api.deleteData("TblArchived", "book_id", b.getId()+"");
          root.dispose();
           }
            
            }else{
                int x=JOptionPane.showConfirmDialog(this, "Are you sure to archive book ?", "Archive", JOptionPane.YES_NO_OPTION);
                if(x==0){
                    api.archiveBook(b, LibrarySystem.logged);
                }
            }
            this.refreshArchive();
        }//dlb clcok

    }//GEN-LAST:event_tblCopiesMouseClicked

    private void txtAuthorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAuthorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAuthorActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:

        String title = txtTitle.getText();
        String author = txtAuthor.getText();
        String pub = txtPublisher.getText();
        String year = cboYear.getSelectedItem().toString();
        String category = cboCategory.getSelectedItem().toString();

        if(title.isEmpty()){
            LibrarySystem.showError("Title is required field.", this);
        }else if(author.isEmpty()){
            LibrarySystem.showError("Author is required field.", this);

        }else if(pub.isEmpty()){
            LibrarySystem.showError("Publisher is required field.", this);

        }else if(!LibrarySystem.isInteger(cboYear.getSelectedItem().toString())){
            LibrarySystem.showError("Invalid published year!", this);

        }else if(Integer.parseInt(cboYear.getSelectedItem().toString())>new Date().getYear()+1900){
        
         LibrarySystem.showError("Invalid published year! because this year is in the future.", this);
        }else{
          int x=JOptionPane.showConfirmDialog(this, "Are you sure ?", "Book Update", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if(x==0){
            Book b =new Book();
            b.setTitle(title);
            b.setAuthor(author);
            b.setPublisher(pub);
            b.setYearPublish(year);
            b.setCategory(category);
            api.updateBook(b, book);
            LibrarySystem.showMessage("Successfully updated!", "Update book", this);
            
            this.root.dispose();
        }
        
        
        }//end of lese

      
    }//GEN-LAST:event_btnSaveActionPerformed

    private void txtTitleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTitleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTitleActionPerformed

    private void txtISBNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtISBNActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtISBNActionPerformed

    private void txtPublisherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPublisherActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPublisherActionPerformed

    private void btnBorrowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrowActionPerformed
        // TODO add your handling code here:
        String borrower =  txtStudNo.getText();
        String copyNum = cboCopyNum.getSelectedItem().toString();

        if(borrower.isEmpty()){
            LibrarySystem.showError("Enter a student number.", this);
        }else if (!api.isExist("TblStudent", "stud_no", borrower)){
            LibrarySystem.showError("This student is not existing.", this);
        }else if(api.getCountOf("TblBorrowed", "borrower", borrower)>=3){
            LibrarySystem.showError("This student/faculty reach the maximum quantity of borrowed books!", root);
        }else if(api.getSpecificStudent(Integer.parseInt(borrower)).getStatus().equals(Student.DROPPED)){
        LibrarySystem.showError("This student is dropped.\nDropped students cannot be borrowed!", "Failed to borrow", this);
        }else{
            Student st = api.getSpecificStudent(Integer.parseInt(borrower)); 
           
            String sal = "**** Borrow Book ****";
            sal += "\nReturn this book within 1 day only";
            sal +="\n";
            sal += "\nStudent Number: "+borrower;
            sal += "\nFullName : "+st.getFullName();
            sal +="\nBook Title : "+book.getTitle();
            sal+="\nBook Copy Number : "+book.getCopyNumber();
            sal += "\nBook isbn: "+book.getISBN();
            int confirm = JOptionPane.showConfirmDialog(root, sal, "Borrow Book", JOptionPane.YES_NO_OPTION);
            if(confirm==0){
                Student s = api.getSpecificStudent(Integer.parseInt(borrower));
                int id = api.getBookId(book.getISBN(), Integer.parseInt(copyNum));
                api.borrowBook(id,Integer.parseInt(copyNum),book, s,LibrarySystem.logged);
                root.dispose();
            }
        }

    }//GEN-LAST:event_btnBorrowActionPerformed

    private void txtStudNoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtStudNoKeyPressed
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if((Character.isDigit(c))||(evt.getKeyCode()==8)){
            txtStudNo.setEditable(true);
        }else{
            txtStudNo.setEditable(false);
        }
    }//GEN-LAST:event_txtStudNoKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBorrow;
    private javax.swing.JButton btnSave;
    private javax.swing.JComboBox cboCategory;
    private javax.swing.JComboBox cboCopyNum;
    private javax.swing.JComboBox cboYear;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblArchived;
    private javax.swing.JLabel lblAuthor;
    private javax.swing.JLabel lblAvail;
    private javax.swing.JLabel lblBorrowCopies;
    private javax.swing.JLabel lblCloseView;
    private javax.swing.JLabel lblPublisher;
    private javax.swing.JLabel lblRemCopies;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblTotalCopies;
    private javax.swing.JLabel lblYear;
    public javax.swing.JTabbedPane tabBook;
    private javax.swing.JTable tblCopies;
    private javax.swing.JTextField txtAuthor;
    private javax.swing.JTextField txtISBN;
    private javax.swing.JTextField txtPublisher;
    private javax.swing.JTextField txtStudNo;
    private javax.swing.JTextField txtTitle;
    // End of variables declaration//GEN-END:variables
}
